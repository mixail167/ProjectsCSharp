// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using YoutubeExtractor;
//
//    var youtubeModel = YoutubeModel.FromJson(jsonString);

namespace YoutubeExtractor
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    public partial class YoutubeModel
    {
        [JsonProperty("playabilityStatus", NullValueHandling = NullValueHandling.Ignore)]
        public PlayabilityStatus PlayabilityStatus { get; set; }

        [JsonProperty("streamingData", NullValueHandling = NullValueHandling.Ignore)]
        public StreamingData StreamingData { get; set; }

        [JsonProperty("playbackTracking", NullValueHandling = NullValueHandling.Ignore)]
        public PlaybackTracking PlaybackTracking { get; set; }

        [JsonProperty("videoDetails", NullValueHandling = NullValueHandling.Ignore)]
        public VideoDetails VideoDetails { get; set; }

        [JsonProperty("annotations", NullValueHandling = NullValueHandling.Ignore)]
        public List<Annotation> Annotations { get; set; }

        [JsonProperty("playerConfig", NullValueHandling = NullValueHandling.Ignore)]
        public PlayerConfig PlayerConfig { get; set; }

        [JsonProperty("storyboards", NullValueHandling = NullValueHandling.Ignore)]
        public Storyboards Storyboards { get; set; }

        [JsonProperty("microformat", NullValueHandling = NullValueHandling.Ignore)]
        public Microformat Microformat { get; set; }

        [JsonProperty("trackingParams", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingParams { get; set; }

        [JsonProperty("attestation", NullValueHandling = NullValueHandling.Ignore)]
        public Attestation Attestation { get; set; }

        [JsonProperty("endscreen", NullValueHandling = NullValueHandling.Ignore)]
        public Endscreen Endscreen { get; set; }
    }

    public partial class Annotation
    {
        [JsonProperty("playerAnnotationsUrlsRenderer", NullValueHandling = NullValueHandling.Ignore)]
        public PlayerAnnotationsUrlsRenderer PlayerAnnotationsUrlsRenderer { get; set; }
    }

    public partial class PlayerAnnotationsUrlsRenderer
    {
        [JsonProperty("invideoUrl", NullValueHandling = NullValueHandling.Ignore)]
        public string InvideoUrl { get; set; }

        [JsonProperty("loadPolicy", NullValueHandling = NullValueHandling.Ignore)]
        public string LoadPolicy { get; set; }

        [JsonProperty("allowInPlaceSwitch", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AllowInPlaceSwitch { get; set; }
    }

    public partial class Attestation
    {
        [JsonProperty("playerAttestationRenderer", NullValueHandling = NullValueHandling.Ignore)]
        public PlayerAttestationRenderer PlayerAttestationRenderer { get; set; }
    }

    public partial class PlayerAttestationRenderer
    {
        [JsonProperty("challenge", NullValueHandling = NullValueHandling.Ignore)]
        public string Challenge { get; set; }

        [JsonProperty("botguardData", NullValueHandling = NullValueHandling.Ignore)]
        public BotguardData BotguardData { get; set; }
    }

    public partial class BotguardData
    {
        [JsonProperty("program", NullValueHandling = NullValueHandling.Ignore)]
        public string Program { get; set; }

        [JsonProperty("interpreterUrl", NullValueHandling = NullValueHandling.Ignore)]
        public string InterpreterUrl { get; set; }
    }

    public partial class Endscreen
    {
        [JsonProperty("endscreenRenderer", NullValueHandling = NullValueHandling.Ignore)]
        public EndscreenRenderer EndscreenRenderer { get; set; }
    }

    public partial class EndscreenRenderer
    {
        [JsonProperty("elements", NullValueHandling = NullValueHandling.Ignore)]
        public List<Element> Elements { get; set; }

        [JsonProperty("startMs", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? StartMs { get; set; }

        [JsonProperty("trackingParams", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingParams { get; set; }
    }

    public partial class Element
    {
        [JsonProperty("endscreenElementRenderer", NullValueHandling = NullValueHandling.Ignore)]
        public EndscreenElementRenderer EndscreenElementRenderer { get; set; }
    }

    public partial class EndscreenElementRenderer
    {
        [JsonProperty("style", NullValueHandling = NullValueHandling.Ignore)]
        public string Style { get; set; }

        [JsonProperty("image", NullValueHandling = NullValueHandling.Ignore)]
        public ImageClass Image { get; set; }

        [JsonProperty("icon", NullValueHandling = NullValueHandling.Ignore)]
        public Icon Icon { get; set; }

        [JsonProperty("left", NullValueHandling = NullValueHandling.Ignore)]
        public double? Left { get; set; }

        [JsonProperty("width", NullValueHandling = NullValueHandling.Ignore)]
        public double? Width { get; set; }

        [JsonProperty("top", NullValueHandling = NullValueHandling.Ignore)]
        public double? Top { get; set; }

        [JsonProperty("aspectRatio", NullValueHandling = NullValueHandling.Ignore)]
        public double? AspectRatio { get; set; }

        [JsonProperty("startMs", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? StartMs { get; set; }

        [JsonProperty("endMs", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EndMs { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public Title Title { get; set; }

        [JsonProperty("metadata", NullValueHandling = NullValueHandling.Ignore)]
        public Description Metadata { get; set; }

        [JsonProperty("callToAction", NullValueHandling = NullValueHandling.Ignore)]
        public Description CallToAction { get; set; }

        [JsonProperty("dismiss", NullValueHandling = NullValueHandling.Ignore)]
        public Description Dismiss { get; set; }

        [JsonProperty("endpoint", NullValueHandling = NullValueHandling.Ignore)]
        public Endpoint Endpoint { get; set; }

        [JsonProperty("hovercardButton", NullValueHandling = NullValueHandling.Ignore)]
        public HovercardButton HovercardButton { get; set; }

        [JsonProperty("trackingParams", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingParams { get; set; }

        [JsonProperty("isSubscribe", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsSubscribe { get; set; }

        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("videoDuration", NullValueHandling = NullValueHandling.Ignore)]
        public Description VideoDuration { get; set; }

        [JsonProperty("playlistLength", NullValueHandling = NullValueHandling.Ignore)]
        public Description PlaylistLength { get; set; }
    }

    public partial class Description
    {
        [JsonProperty("simpleText", NullValueHandling = NullValueHandling.Ignore)]
        public string SimpleText { get; set; }
    }

    public partial class Endpoint
    {
        [JsonProperty("clickTrackingParams", NullValueHandling = NullValueHandling.Ignore)]
        public string ClickTrackingParams { get; set; }

        [JsonProperty("browseEndpoint", NullValueHandling = NullValueHandling.Ignore)]
        public BrowseEndpoint BrowseEndpoint { get; set; }

        [JsonProperty("watchEndpoint", NullValueHandling = NullValueHandling.Ignore)]
        public WatchEndpoint WatchEndpoint { get; set; }
    }

    public partial class BrowseEndpoint
    {
        [JsonProperty("browseId", NullValueHandling = NullValueHandling.Ignore)]
        public string BrowseId { get; set; }
    }

    public partial class WatchEndpoint
    {
        [JsonProperty("videoId", NullValueHandling = NullValueHandling.Ignore)]
        public string VideoId { get; set; }

        [JsonProperty("playlistId", NullValueHandling = NullValueHandling.Ignore)]
        public string PlaylistId { get; set; }
    }

    public partial class HovercardButton
    {
        [JsonProperty("subscribeButtonRenderer", NullValueHandling = NullValueHandling.Ignore)]
        public SubscribeButtonRenderer SubscribeButtonRenderer { get; set; }
    }

    public partial class SubscribeButtonRenderer
    {
        [JsonProperty("buttonText", NullValueHandling = NullValueHandling.Ignore)]
        public ButtonText ButtonText { get; set; }

        [JsonProperty("subscribed", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Subscribed { get; set; }

        [JsonProperty("enabled", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("channelId", NullValueHandling = NullValueHandling.Ignore)]
        public string ChannelId { get; set; }

        [JsonProperty("showPreferences", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ShowPreferences { get; set; }

        [JsonProperty("subscribedButtonText", NullValueHandling = NullValueHandling.Ignore)]
        public ButtonText SubscribedButtonText { get; set; }

        [JsonProperty("unsubscribedButtonText", NullValueHandling = NullValueHandling.Ignore)]
        public ButtonText UnsubscribedButtonText { get; set; }

        [JsonProperty("trackingParams", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingParams { get; set; }

        [JsonProperty("unsubscribeButtonText", NullValueHandling = NullValueHandling.Ignore)]
        public ButtonText UnsubscribeButtonText { get; set; }

        [JsonProperty("serviceEndpoints", NullValueHandling = NullValueHandling.Ignore)]
        public List<ServiceEndpointElement> ServiceEndpoints { get; set; }

        [JsonProperty("subscribeAccessibility", NullValueHandling = NullValueHandling.Ignore)]
        public Accessibility SubscribeAccessibility { get; set; }

        [JsonProperty("unsubscribeAccessibility", NullValueHandling = NullValueHandling.Ignore)]
        public Accessibility UnsubscribeAccessibility { get; set; }
    }

    public partial class ButtonText
    {
        [JsonProperty("runs", NullValueHandling = NullValueHandling.Ignore)]
        public List<Run> Runs { get; set; }
    }

    public partial class Run
    {
        [JsonProperty("text", NullValueHandling = NullValueHandling.Ignore)]
        public string Text { get; set; }
    }

    public partial class ServiceEndpointElement
    {
        [JsonProperty("clickTrackingParams", NullValueHandling = NullValueHandling.Ignore)]
        public string ClickTrackingParams { get; set; }

        [JsonProperty("subscribeEndpoint", NullValueHandling = NullValueHandling.Ignore)]
        public SubscribeEndpoint SubscribeEndpoint { get; set; }

        [JsonProperty("signalServiceEndpoint", NullValueHandling = NullValueHandling.Ignore)]
        public SignalServiceEndpoint SignalServiceEndpoint { get; set; }
    }

    public partial class SignalServiceEndpoint
    {
        [JsonProperty("signal", NullValueHandling = NullValueHandling.Ignore)]
        public string Signal { get; set; }

        [JsonProperty("actions", NullValueHandling = NullValueHandling.Ignore)]
        public List<Action> Actions { get; set; }
    }

    public partial class Action
    {
        [JsonProperty("clickTrackingParams", NullValueHandling = NullValueHandling.Ignore)]
        public string ClickTrackingParams { get; set; }

        [JsonProperty("openPopupAction", NullValueHandling = NullValueHandling.Ignore)]
        public OpenPopupAction OpenPopupAction { get; set; }
    }

    public partial class OpenPopupAction
    {
        [JsonProperty("popup", NullValueHandling = NullValueHandling.Ignore)]
        public Popup Popup { get; set; }

        [JsonProperty("popupType", NullValueHandling = NullValueHandling.Ignore)]
        public string PopupType { get; set; }
    }

    public partial class Popup
    {
        [JsonProperty("confirmDialogRenderer", NullValueHandling = NullValueHandling.Ignore)]
        public ConfirmDialogRenderer ConfirmDialogRenderer { get; set; }
    }

    public partial class ConfirmDialogRenderer
    {
        [JsonProperty("trackingParams", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingParams { get; set; }

        [JsonProperty("dialogMessages", NullValueHandling = NullValueHandling.Ignore)]
        public List<ButtonText> DialogMessages { get; set; }

        [JsonProperty("confirmButton", NullValueHandling = NullValueHandling.Ignore)]
        public Button ConfirmButton { get; set; }

        [JsonProperty("cancelButton", NullValueHandling = NullValueHandling.Ignore)]
        public Button CancelButton { get; set; }

        [JsonProperty("primaryIsCancel", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrimaryIsCancel { get; set; }
    }

    public partial class Button
    {
        [JsonProperty("buttonRenderer", NullValueHandling = NullValueHandling.Ignore)]
        public ButtonRenderer ButtonRenderer { get; set; }
    }

    public partial class ButtonRenderer
    {
        [JsonProperty("style", NullValueHandling = NullValueHandling.Ignore)]
        public string Style { get; set; }

        [JsonProperty("size", NullValueHandling = NullValueHandling.Ignore)]
        public string Size { get; set; }

        [JsonProperty("text", NullValueHandling = NullValueHandling.Ignore)]
        public ButtonText Text { get; set; }

        [JsonProperty("trackingParams", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingParams { get; set; }

        [JsonProperty("serviceEndpoint", NullValueHandling = NullValueHandling.Ignore)]
        public ButtonRendererServiceEndpoint ServiceEndpoint { get; set; }
    }

    public partial class ButtonRendererServiceEndpoint
    {
        [JsonProperty("clickTrackingParams", NullValueHandling = NullValueHandling.Ignore)]
        public string ClickTrackingParams { get; set; }

        [JsonProperty("unsubscribeEndpoint", NullValueHandling = NullValueHandling.Ignore)]
        public SubscribeEndpoint UnsubscribeEndpoint { get; set; }
    }

    public partial class SubscribeEndpoint
    {
        [JsonProperty("channelIds", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ChannelIds { get; set; }

        [JsonProperty("params", NullValueHandling = NullValueHandling.Ignore)]
        public string Params { get; set; }
    }

    public partial class Accessibility
    {
        [JsonProperty("accessibilityData", NullValueHandling = NullValueHandling.Ignore)]
        public AccessibilityData AccessibilityData { get; set; }
    }

    public partial class AccessibilityData
    {
        [JsonProperty("label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }
    }

    public partial class Icon
    {
        [JsonProperty("thumbnails", NullValueHandling = NullValueHandling.Ignore)]
        public List<IconThumbnail> Thumbnails { get; set; }
    }

    public partial class IconThumbnail
    {
        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public string Url { get; set; }
    }

    public partial class ImageClass
    {
        [JsonProperty("thumbnails", NullValueHandling = NullValueHandling.Ignore)]
        public List<ThumbnailThumbnail> Thumbnails { get; set; }
    }

    public partial class ThumbnailThumbnail
    {
        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public string Url { get; set; }

        [JsonProperty("width", NullValueHandling = NullValueHandling.Ignore)]
        public long? Width { get; set; }

        [JsonProperty("height", NullValueHandling = NullValueHandling.Ignore)]
        public long? Height { get; set; }
    }

    public partial class Title
    {
        [JsonProperty("accessibility", NullValueHandling = NullValueHandling.Ignore)]
        public Accessibility Accessibility { get; set; }

        [JsonProperty("simpleText", NullValueHandling = NullValueHandling.Ignore)]
        public string SimpleText { get; set; }
    }

    public partial class Microformat
    {
        [JsonProperty("playerMicroformatRenderer", NullValueHandling = NullValueHandling.Ignore)]
        public PlayerMicroformatRenderer PlayerMicroformatRenderer { get; set; }
    }

    public partial class PlayerMicroformatRenderer
    {
        [JsonProperty("thumbnail", NullValueHandling = NullValueHandling.Ignore)]
        public ImageClass Thumbnail { get; set; }

        [JsonProperty("embed", NullValueHandling = NullValueHandling.Ignore)]
        public Embed Embed { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public Description Title { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public Description Description { get; set; }

        [JsonProperty("lengthSeconds", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? LengthSeconds { get; set; }

        [JsonProperty("ownerProfileUrl", NullValueHandling = NullValueHandling.Ignore)]
        public string OwnerProfileUrl { get; set; }

        [JsonProperty("ownerGplusProfileUrl", NullValueHandling = NullValueHandling.Ignore)]
        public string OwnerGplusProfileUrl { get; set; }

        [JsonProperty("externalChannelId", NullValueHandling = NullValueHandling.Ignore)]
        public string ExternalChannelId { get; set; }

        [JsonProperty("availableCountries", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> AvailableCountries { get; set; }

        [JsonProperty("isUnlisted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsUnlisted { get; set; }

        [JsonProperty("hasYpcMetadata", NullValueHandling = NullValueHandling.Ignore)]
        public bool? HasYpcMetadata { get; set; }

        [JsonProperty("viewCount", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ViewCount { get; set; }

        [JsonProperty("category", NullValueHandling = NullValueHandling.Ignore)]
        public string Category { get; set; }

        [JsonProperty("publishDate", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? PublishDate { get; set; }

        [JsonProperty("ownerChannelName", NullValueHandling = NullValueHandling.Ignore)]
        public string OwnerChannelName { get; set; }

        [JsonProperty("uploadDate", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? UploadDate { get; set; }
    }

    public partial class Embed
    {
        [JsonProperty("iframeUrl", NullValueHandling = NullValueHandling.Ignore)]
        public string IframeUrl { get; set; }

        [JsonProperty("flashUrl", NullValueHandling = NullValueHandling.Ignore)]
        public string FlashUrl { get; set; }

        [JsonProperty("width", NullValueHandling = NullValueHandling.Ignore)]
        public long? Width { get; set; }

        [JsonProperty("height", NullValueHandling = NullValueHandling.Ignore)]
        public long? Height { get; set; }

        [JsonProperty("flashSecureUrl", NullValueHandling = NullValueHandling.Ignore)]
        public string FlashSecureUrl { get; set; }
    }

    public partial class PlayabilityStatus
    {
        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("playableInEmbed", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PlayableInEmbed { get; set; }
    }

    public partial class PlaybackTracking
    {
        [JsonProperty("videostatsPlaybackUrl", NullValueHandling = NullValueHandling.Ignore)]
        public PtrackingUrlClass VideostatsPlaybackUrl { get; set; }

        [JsonProperty("videostatsDelayplayUrl", NullValueHandling = NullValueHandling.Ignore)]
        public PtrackingUrlClass VideostatsDelayplayUrl { get; set; }

        [JsonProperty("videostatsWatchtimeUrl", NullValueHandling = NullValueHandling.Ignore)]
        public PtrackingUrlClass VideostatsWatchtimeUrl { get; set; }

        [JsonProperty("ptrackingUrl", NullValueHandling = NullValueHandling.Ignore)]
        public PtrackingUrlClass PtrackingUrl { get; set; }

        [JsonProperty("qoeUrl", NullValueHandling = NullValueHandling.Ignore)]
        public PtrackingUrlClass QoeUrl { get; set; }

        [JsonProperty("setAwesomeUrl", NullValueHandling = NullValueHandling.Ignore)]
        public AtrUrlClass SetAwesomeUrl { get; set; }

        [JsonProperty("atrUrl", NullValueHandling = NullValueHandling.Ignore)]
        public AtrUrlClass AtrUrl { get; set; }

        [JsonProperty("youtubeRemarketingUrl", NullValueHandling = NullValueHandling.Ignore)]
        public AtrUrlClass YoutubeRemarketingUrl { get; set; }
    }

    public partial class AtrUrlClass
    {
        [JsonProperty("baseUrl", NullValueHandling = NullValueHandling.Ignore)]
        public string BaseUrl { get; set; }

        [JsonProperty("elapsedMediaTimeSeconds", NullValueHandling = NullValueHandling.Ignore)]
        public long? ElapsedMediaTimeSeconds { get; set; }
    }

    public partial class PtrackingUrlClass
    {
        [JsonProperty("baseUrl", NullValueHandling = NullValueHandling.Ignore)]
        public string BaseUrl { get; set; }
    }

    public partial class PlayerConfig
    {
        [JsonProperty("audioConfig", NullValueHandling = NullValueHandling.Ignore)]
        public AudioConfig AudioConfig { get; set; }

        [JsonProperty("streamSelectionConfig", NullValueHandling = NullValueHandling.Ignore)]
        public StreamSelectionConfig StreamSelectionConfig { get; set; }

        [JsonProperty("mediaCommonConfig", NullValueHandling = NullValueHandling.Ignore)]
        public MediaCommonConfig MediaCommonConfig { get; set; }
    }

    public partial class AudioConfig
    {
        [JsonProperty("loudnessDb", NullValueHandling = NullValueHandling.Ignore)]
        public double? LoudnessDb { get; set; }

        [JsonProperty("perceptualLoudnessDb", NullValueHandling = NullValueHandling.Ignore)]
        public double? PerceptualLoudnessDb { get; set; }

        [JsonProperty("enablePerFormatLoudness", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EnablePerFormatLoudness { get; set; }
    }

    public partial class MediaCommonConfig
    {
        [JsonProperty("dynamicReadaheadConfig", NullValueHandling = NullValueHandling.Ignore)]
        public DynamicReadaheadConfig DynamicReadaheadConfig { get; set; }
    }

    public partial class DynamicReadaheadConfig
    {
        [JsonProperty("maxReadAheadMediaTimeMs", NullValueHandling = NullValueHandling.Ignore)]
        public long? MaxReadAheadMediaTimeMs { get; set; }

        [JsonProperty("minReadAheadMediaTimeMs", NullValueHandling = NullValueHandling.Ignore)]
        public long? MinReadAheadMediaTimeMs { get; set; }

        [JsonProperty("readAheadGrowthRateMs", NullValueHandling = NullValueHandling.Ignore)]
        public long? ReadAheadGrowthRateMs { get; set; }
    }

    public partial class StreamSelectionConfig
    {
        [JsonProperty("maxBitrate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxBitrate { get; set; }
    }

    public partial class Storyboards
    {
        [JsonProperty("playerStoryboardSpecRenderer", NullValueHandling = NullValueHandling.Ignore)]
        public PlayerStoryboardSpecRenderer PlayerStoryboardSpecRenderer { get; set; }
    }

    public partial class PlayerStoryboardSpecRenderer
    {
        [JsonProperty("spec", NullValueHandling = NullValueHandling.Ignore)]
        public string Spec { get; set; }
    }

    public partial class StreamingData
    {
        [JsonProperty("expiresInSeconds", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ExpiresInSeconds { get; set; }

        [JsonProperty("formats", NullValueHandling = NullValueHandling.Ignore)]
        public List<Format> Formats { get; set; }

        [JsonProperty("adaptiveFormats", NullValueHandling = NullValueHandling.Ignore)]
        public List<Format> AdaptiveFormats { get; set; }
    }

    public partial class Format
    {
        [JsonProperty("itag", NullValueHandling = NullValueHandling.Ignore)]
        public long? Itag { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public string Url { get; set; }

        [JsonProperty("mimeType", NullValueHandling = NullValueHandling.Ignore)]
        public string MimeType { get; set; }

        [JsonProperty("bitrate", NullValueHandling = NullValueHandling.Ignore)]
        public long? Bitrate { get; set; }

        [JsonProperty("width", NullValueHandling = NullValueHandling.Ignore)]
        public long? Width { get; set; }

        [JsonProperty("height", NullValueHandling = NullValueHandling.Ignore)]
        public long? Height { get; set; }

        [JsonProperty("initRange", NullValueHandling = NullValueHandling.Ignore)]
        public Range InitRange { get; set; }

        [JsonProperty("indexRange", NullValueHandling = NullValueHandling.Ignore)]
        public Range IndexRange { get; set; }

        [JsonProperty("lastModified", NullValueHandling = NullValueHandling.Ignore)]
        public string LastModified { get; set; }

        [JsonProperty("contentLength", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ContentLength { get; set; }

        [JsonProperty("quality", NullValueHandling = NullValueHandling.Ignore)]
        public string Quality { get; set; }

        [JsonProperty("fps", NullValueHandling = NullValueHandling.Ignore)]
        public long? Fps { get; set; }

        [JsonProperty("qualityLabel", NullValueHandling = NullValueHandling.Ignore)]
        public string QualityLabel { get; set; }

        [JsonProperty("projectionType", NullValueHandling = NullValueHandling.Ignore)]
        public ProjectionType? ProjectionType { get; set; }

        [JsonProperty("averageBitrate", NullValueHandling = NullValueHandling.Ignore)]
        public long? AverageBitrate { get; set; }

        [JsonProperty("approxDurationMs", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ApproxDurationMs { get; set; }

        [JsonProperty("colorInfo", NullValueHandling = NullValueHandling.Ignore)]
        public ColorInfo ColorInfo { get; set; }

        [JsonProperty("highReplication", NullValueHandling = NullValueHandling.Ignore)]
        public bool? HighReplication { get; set; }

        [JsonProperty("audioQuality", NullValueHandling = NullValueHandling.Ignore)]
        public string AudioQuality { get; set; }

        [JsonProperty("audioSampleRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AudioSampleRate { get; set; }

        [JsonProperty("audioChannels", NullValueHandling = NullValueHandling.Ignore)]
        public long? AudioChannels { get; set; }

        [JsonProperty("cipher", NullValueHandling = NullValueHandling.Ignore)]
        public string Cipher { get; set; }

        [JsonProperty("signatureCipher", NullValueHandling = NullValueHandling.Ignore)]
        public string SignatureCipher { get; set; }
    }

    public partial class ColorInfo
    {
        [JsonProperty("primaries", NullValueHandling = NullValueHandling.Ignore)]
        public string Primaries { get; set; }

        [JsonProperty("transferCharacteristics", NullValueHandling = NullValueHandling.Ignore)]
        public string TransferCharacteristics { get; set; }

        [JsonProperty("matrixCoefficients", NullValueHandling = NullValueHandling.Ignore)]
        public string MatrixCoefficients { get; set; }
    }

    public partial class Range
    {
        [JsonProperty("start", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Start { get; set; }

        [JsonProperty("end", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? End { get; set; }
    }

    public partial class VideoDetails
    {
        [JsonProperty("videoId", NullValueHandling = NullValueHandling.Ignore)]
        public string VideoId { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("lengthSeconds", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? LengthSeconds { get; set; }

        [JsonProperty("keywords", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Keywords { get; set; }

        [JsonProperty("channelId", NullValueHandling = NullValueHandling.Ignore)]
        public string ChannelId { get; set; }

        [JsonProperty("isOwnerViewing", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsOwnerViewing { get; set; }

        [JsonProperty("shortDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string ShortDescription { get; set; }

        [JsonProperty("isCrawlable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsCrawlable { get; set; }

        [JsonProperty("thumbnail", NullValueHandling = NullValueHandling.Ignore)]
        public ImageClass Thumbnail { get; set; }

        [JsonProperty("averageRating", NullValueHandling = NullValueHandling.Ignore)]
        public double? AverageRating { get; set; }

        [JsonProperty("allowRatings", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AllowRatings { get; set; }

        [JsonProperty("viewCount", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ViewCount { get; set; }

        [JsonProperty("author", NullValueHandling = NullValueHandling.Ignore)]
        public string Author { get; set; }

        [JsonProperty("isPrivate", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsPrivate { get; set; }

        [JsonProperty("isUnpluggedCorpus", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsUnpluggedCorpus { get; set; }

        [JsonProperty("isLiveContent", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsLiveContent { get; set; }
    }

    public enum ProjectionType { Rectangular };

    public partial class YoutubeModel
    {
        public static YoutubeModel FromJson(string json) => JsonConvert.DeserializeObject<YoutubeModel>(json, Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this YoutubeModel self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                ProjectionTypeConverter.Singleton,
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

    internal class ParseStringConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(long) || t == typeof(long?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            long l;
            if (Int64.TryParse(value, out l))
            {
                return l;
            }
            throw new Exception("Cannot unmarshal type long");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (long)untypedValue;
            serializer.Serialize(writer, value.ToString());
            return;
        }

        public static readonly ParseStringConverter Singleton = new ParseStringConverter();
    }

    internal class ProjectionTypeConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(ProjectionType) || t == typeof(ProjectionType?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            if (value == "RECTANGULAR")
            {
                return ProjectionType.Rectangular;
            }
            throw new Exception("Cannot unmarshal type ProjectionType");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (ProjectionType)untypedValue;
            if (value == ProjectionType.Rectangular)
            {
                serializer.Serialize(writer, "RECTANGULAR");
                return;
            }
            throw new Exception("Cannot marshal type ProjectionType");
        }

        public static readonly ProjectionTypeConverter Singleton = new ProjectionTypeConverter();
    }
}